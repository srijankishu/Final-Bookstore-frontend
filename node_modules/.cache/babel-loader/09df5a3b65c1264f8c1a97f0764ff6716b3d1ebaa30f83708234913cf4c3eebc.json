{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Srijan\\\\Desktop\\\\project\\\\Frontend\\\\bookstore\\\\src\\\\Component\\\\Srijan.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BinLookup = () => {\n  _s();\n  const [bin, setBin] = useState(\"\");\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const fetchBinDetails = async () => {\n    try {\n      const res = await fetch(\"https://drlabapis.onrender.com/api/bin?bin=\" + {\n        bin\n      });\n      const data = await res.json();\n      console.log(dat);\n      if (res.ok) {\n        setResponse(data);\n        setError(null);\n      } else {\n        setError(\"Failed to fetch bin details\");\n      }\n    } catch (err) {\n      setError(\"An error occurred\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bin Lookup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: bin,\n      onChange: e => setBin(e.target.value),\n      placeholder: \"Enter bin number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchBinDetails,\n      children: \"Lookup BIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bin Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", response.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type: \", response.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Scheme: \", response.scheme]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tier: \", response.tier]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Country: \", response.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Issuer: \", response.issuer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(BinLookup, \"YRp1ssgvd6u0l/cH6vM/UmcmC7o=\");\n_c = BinLookup;\nexport default BinLookup;\nvar _c;\n$RefreshReg$(_c, \"BinLookup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BinLookup","_s","bin","setBin","response","setResponse","error","setError","fetchBinDetails","res","fetch","data","json","console","log","dat","ok","err","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","status","scheme","tier","country","issuer","_c","$RefreshReg$"],"sources":["C:/Users/Srijan/Desktop/project/Frontend/bookstore/src/Component/Srijan.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst BinLookup = () => {\r\n  const [bin, setBin] = useState(\"\");\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchBinDetails = async () => {\r\n    try {\r\n      const res = await fetch(\"https://drlabapis.onrender.com/api/bin?bin=\"+{bin});\r\n      const data = await res.json();\r\n\r\n      console.log(dat);\r\n      \r\n      \r\n      if (res.ok) {\r\n        setResponse(data);\r\n        setError(null);\r\n      } else {\r\n        setError(\"Failed to fetch bin details\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Bin Lookup</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={bin}\r\n        onChange={(e) => setBin(e.target.value)}\r\n        placeholder=\"Enter bin number\"\r\n      />\r\n      <button onClick={fetchBinDetails}>Lookup BIN</button>\r\n\r\n      {response && (\r\n        <div>\r\n          <h3>Bin Details:</h3>\r\n          <p>Status: {response.status}</p>\r\n          <p>Type: {response.type}</p>\r\n          <p>Scheme: {response.scheme}</p>\r\n          <p>Tier: {response.tier}</p>\r\n          <p>Country: {response.country}</p>\r\n          <p>Issuer: {response.issuer}</p>\r\n        </div>\r\n      )}\r\n\r\n      {error && <p>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BinLookup;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6CAA6C,GAAC;QAACR;MAAG,CAAC,CAAC;MAC5E,MAAMS,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAE7BC,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;MAGhB,IAAIN,GAAG,CAACO,EAAE,EAAE;QACVX,WAAW,CAACM,IAAI,CAAC;QACjBJ,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,MAAM;QACLA,QAAQ,CAAC,6BAA6B,CAAC;MACzC;IACF,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZV,QAAQ,CAAC,mBAAmB,CAAC;IAC/B;EACF,CAAC;EAED,oBACER,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBvB,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEtB,GAAI;MACXuB,QAAQ,EAAGC,CAAC,IAAKvB,MAAM,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACxCI,WAAW,EAAC;IAAkB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFvB,OAAA;MAAQ8B,OAAO,EAAErB,eAAgB;MAAAU,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEpDlB,QAAQ,iBACPL,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBvB,OAAA;QAAAmB,QAAA,GAAG,UAAQ,EAACd,QAAQ,CAAC0B,MAAM;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCvB,OAAA;QAAAmB,QAAA,GAAG,QAAM,EAACd,QAAQ,CAACmB,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BvB,OAAA;QAAAmB,QAAA,GAAG,UAAQ,EAACd,QAAQ,CAAC2B,MAAM;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCvB,OAAA;QAAAmB,QAAA,GAAG,QAAM,EAACd,QAAQ,CAAC4B,IAAI;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BvB,OAAA;QAAAmB,QAAA,GAAG,WAAS,EAACd,QAAQ,CAAC6B,OAAO;MAAA;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClCvB,OAAA;QAAAmB,QAAA,GAAG,UAAQ,EAACd,QAAQ,CAAC8B,MAAM;MAAA;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CACN,EAEAhB,KAAK,iBAAIP,OAAA;MAAAmB,QAAA,EAAIZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAACrB,EAAA,CAlDID,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AAoDf,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
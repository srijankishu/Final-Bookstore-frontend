{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Srijan\\\\Desktop\\\\project\\\\Frontend\\\\bookstore\\\\src\\\\Component\\\\ReadBook.jsx\",\n  _s = $RefreshSig$();\n// ReadBook.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReadBook = ({\n  bookId\n}) => {\n  _s();\n  const [pdfPath, setPdfPath] = useState('');\n  const [error, setError] = useState(''); // State for error handling\n  const [loading, setLoading] = useState(true); // State for loading\n\n  useEffect(() => {\n    const fetchBookPDF = async () => {\n      try {\n        const res = await axios.get(`http://localhost:4000/dpdf/${bookId}/pdf`); // Corrected port\n        setPdfPath(res.data.pdfPath); // Setting the PDF path\n      } catch (err) {\n        console.error(err);\n        setError('Failed to load PDF. Please try again.'); // Set error message\n      } finally {\n        setLoading(false); // Set loading to false\n      }\n    };\n    fetchBookPDF();\n  }, [bookId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Read Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), loading ?\n    /*#__PURE__*/\n    // Check loading state\n    _jsxDEV(\"p\", {\n      children: \"Loading PDF...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : error ?\n    /*#__PURE__*/\n    // Check for errors\n    _jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: `http://localhost:4000${pdfPath}`,\n      width: \"100%\" // Responsive width\n      ,\n      height: \"800\",\n      title: \"PDF Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ReadBook, \"ErJE7vjZnJLESt2LVgnHdsb1boQ=\");\n_c = ReadBook;\nexport default ReadBook;\nvar _c;\n$RefreshReg$(_c, \"ReadBook\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ReadBook","bookId","_s","pdfPath","setPdfPath","error","setError","loading","setLoading","fetchBookPDF","res","get","data","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","src","width","height","title","_c","$RefreshReg$"],"sources":["C:/Users/Srijan/Desktop/project/Frontend/bookstore/src/Component/ReadBook.jsx"],"sourcesContent":["// ReadBook.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ReadBook = ({ bookId }) => {\r\n  const [pdfPath, setPdfPath] = useState('');\r\n  const [error, setError] = useState(''); // State for error handling\r\n  const [loading, setLoading] = useState(true); // State for loading\r\n\r\n  useEffect(() => {\r\n    const fetchBookPDF = async () => {\r\n      try {\r\n        const res = await axios.get(`http://localhost:4000/dpdf/${bookId}/pdf`); // Corrected port\r\n        setPdfPath(res.data.pdfPath); // Setting the PDF path\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError('Failed to load PDF. Please try again.'); // Set error message\r\n      } finally {\r\n        setLoading(false); // Set loading to false\r\n      }\r\n    };\r\n\r\n    fetchBookPDF();\r\n  }, [bookId]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Read Book</h1>\r\n      {loading ? ( // Check loading state\r\n        <p>Loading PDF...</p>\r\n      ) : error ? ( // Check for errors\r\n        <p>{error}</p>\r\n      ) : (\r\n        <iframe \r\n          src={`http://localhost:4000${pdfPath}`} \r\n          width=\"100%\" // Responsive width\r\n          height=\"800\" \r\n          title=\"PDF Viewer\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReadBook;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,8BAA8BV,MAAM,MAAM,CAAC,CAAC,CAAC;QACzEG,UAAU,CAACM,GAAG,CAACE,IAAI,CAACT,OAAO,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOU,GAAG,EAAE;QACZC,OAAO,CAACT,KAAK,CAACQ,GAAG,CAAC;QAClBP,QAAQ,CAAC,uCAAuC,CAAC,CAAC,CAAC;MACrD,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;IAEDC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBZ,OAAO;IAAA;IAAK;IACXR,OAAA;MAAAgB,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACnBd,KAAK;IAAA;IAAK;IACZN,OAAA;MAAAgB,QAAA,EAAIV;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEdpB,OAAA;MACEqB,GAAG,EAAE,wBAAwBjB,OAAO,EAAG;MACvCkB,KAAK,EAAC,MAAM,CAAC;MAAA;MACbC,MAAM,EAAC,KAAK;MACZC,KAAK,EAAC;IAAY;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CAtCIF,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
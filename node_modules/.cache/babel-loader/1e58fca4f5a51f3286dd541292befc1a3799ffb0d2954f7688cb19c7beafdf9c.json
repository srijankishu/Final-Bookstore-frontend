{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Srijan\\\\Desktop\\\\project\\\\Frontend\\\\bookstore\\\\src\\\\Component\\\\Mishra.jsx\",\n  _s = $RefreshSig$();\n// BookList.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ReadBook from './ReadBook'; // This will display the selected PDF\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookList = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [selectedBook, setSelectedBook] = useState(null);\n  const [loading, setLoading] = useState(true); // State for loading\n  const [error, setError] = useState(''); // State for error handling\n\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        const res = await axios.get('http://localhost:4001/dpdf'); // Corrected port\n        setBooks(res.data);\n      } catch (err) {\n        console.error(err);\n        setError('Failed to load books. Please try again.'); // Set error message\n      } finally {\n        setLoading(false); // Set loading to false\n      }\n    };\n    fetchBooks();\n  }, []);\n  const handleReadClick = bookId => {\n    setSelectedBook(bookId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Books List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), loading ?\n    /*#__PURE__*/\n    // Check loading state\n    _jsxDEV(\"p\", {\n      children: \"Loading books...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : error ?\n    /*#__PURE__*/\n    // Check for errors\n    _jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: books.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleReadClick(book._id),\n          children: \"Read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, book._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), selectedBook && /*#__PURE__*/_jsxDEV(ReadBook, {\n      bookId: selectedBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(BookList, \"fgpOCw/ei+KiMPneVGDB3nWsCA0=\");\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useEffect","useState","axios","ReadBook","jsxDEV","_jsxDEV","BookList","_s","books","setBooks","selectedBook","setSelectedBook","loading","setLoading","error","setError","fetchBooks","res","get","data","err","console","handleReadClick","bookId","children","fileName","_jsxFileName","lineNumber","columnNumber","map","book","title","onClick","_id","_c","$RefreshReg$"],"sources":["C:/Users/Srijan/Desktop/project/Frontend/bookstore/src/Component/Mishra.jsx"],"sourcesContent":["// BookList.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ReadBook from './ReadBook'; // This will display the selected PDF\r\n\r\nconst BookList = () => {\r\n  const [books, setBooks] = useState([]);\r\n  const [selectedBook, setSelectedBook] = useState(null);\r\n  const [loading, setLoading] = useState(true); // State for loading\r\n  const [error, setError] = useState(''); // State for error handling\r\n\r\n  useEffect(() => {\r\n    const fetchBooks = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:4001/dpdf'); // Corrected port\r\n        setBooks(res.data);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError('Failed to load books. Please try again.'); // Set error message\r\n      } finally {\r\n        setLoading(false); // Set loading to false\r\n      }\r\n    };\r\n\r\n    fetchBooks();\r\n  }, []);\r\n\r\n  const handleReadClick = (bookId) => {\r\n    setSelectedBook(bookId);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Books List</h1>\r\n      {loading ? ( // Check loading state\r\n        <p>Loading books...</p>\r\n      ) : error ? ( // Check for errors\r\n        <p>{error}</p>\r\n      ) : (\r\n        <ul>\r\n          {books.map((book) => (\r\n            <li key={book._id}>\r\n              <span>{book.title}</span>\r\n              <button onClick={() => handleReadClick(book._id)}>Read</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {selectedBook && <ReadBook bookId={selectedBook} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Srijan\\\\Desktop\\\\project - test - Copy\\\\Frontend\\\\bookstore\\\\src\\\\Context\\\\ProtectedRoute.jsx\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  try {\n    const decodedToken = jwtDecode(token);\n    if (decodedToken.role !== 'admin') {\n      alert('Access Denied: Admins Only');\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/unauthorized\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 14\n      }, this);\n    }\n    return children;\n  } catch (err) {\n    console.error('Invalid token', err);\n    localStorage.removeItem('token');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jwtDecode","jsxDEV","_jsxDEV","ProtectedRoute","children","token","localStorage","getItem","Login","fileName","_jsxFileName","lineNumber","columnNumber","decodedToken","role","alert","to","replace","err","console","error","removeItem","_c","$RefreshReg$"],"sources":["C:/Users/Srijan/Desktop/project - test - Copy/Frontend/bookstore/src/Context/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    return <Login/>;\r\n  }\r\n\r\n  try {\r\n    const decodedToken = jwtDecode(token);\r\n    if (decodedToken.role !== 'admin') {\r\n      alert('Access Denied: Admins Only');\r\n      return <Navigate to=\"/unauthorized\" replace />;\r\n    }\r\n    return children;\r\n  } catch (err) {\r\n    console.error('Invalid token', err);\r\n    localStorage.removeItem('token');\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE;IACV,oBAAOH,OAAA,CAACM,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EACjB;EAEA,IAAI;IACF,MAAMC,YAAY,GAAGb,SAAS,CAACK,KAAK,CAAC;IACrC,IAAIQ,YAAY,CAACC,IAAI,KAAK,OAAO,EAAE;MACjCC,KAAK,CAAC,4BAA4B,CAAC;MACnC,oBAAOb,OAAA,CAACH,QAAQ;QAACiB,EAAE,EAAC,eAAe;QAACC,OAAO;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAChD;IACA,OAAOR,QAAQ;EACjB,CAAC,CAAC,OAAOc,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,GAAG,CAAC;IACnCZ,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;IAChC,oBAAOnB,OAAA,CAACH,QAAQ;MAACiB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;AACF,CAAC;AAACU,EAAA,GAlBInB,cAAc;AAoBpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
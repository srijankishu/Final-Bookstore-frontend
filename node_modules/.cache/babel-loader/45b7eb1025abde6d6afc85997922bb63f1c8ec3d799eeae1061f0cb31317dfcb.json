{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Srijan\\\\Desktop\\\\project\\\\Frontend\\\\bookstore\\\\src\\\\Component\\\\Context\\\\Auth.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport default function AuthProvider({\n  children\n}) {\n  _s();\n  const initialAuth = localStorage.getItem('Users');\n  const [auth, setAuth] = useState(initialAuth ? JSON.parse(initialAuth) : undefined);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      setAuth\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"gWRmKpeClQm6tJQbIEydxRgTACo=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n\n//to use user credentials globally in every component \n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","initialAuth","localStorage","getItem","auth","setAuth","JSON","parse","undefined","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Srijan/Desktop/project/Frontend/bookstore/src/Component/Context/Auth.jsx"],"sourcesContent":["import React,{createContext,useContext,useState} from 'react'\r\n\r\nexport const AuthContext = createContext();\r\nexport default function AuthProvider({children}){\r\n  const initialAuth = localStorage.getItem('Users');\r\n  const [auth,setAuth] = useState(initialAuth?JSON.parse(initialAuth):undefined);\r\n  return (\r\n    <AuthContext.Provider value={{auth,setAuth}}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n export const useAuth = () => useContext(AuthContext);\r\n\r\n//to use user credentials globally in every component "],"mappings":";;;AAAA,OAAOA,KAAK,IAAEC,aAAa,EAACC,UAAU,EAACC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7D,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAC1C,eAAe,SAASM,YAAYA,CAAC;EAACC;AAAQ,CAAC,EAAC;EAAAC,EAAA;EAC9C,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACjD,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGX,QAAQ,CAACO,WAAW,GAACK,IAAI,CAACC,KAAK,CAACN,WAAW,CAAC,GAACO,SAAS,CAAC;EAC9E,oBACEZ,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAE;MAACN,IAAI;MAACC;IAAO,CAAE;IAAAN,QAAA,EACzCA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACd,EAAA,CARuBF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AASnC,OAAO,MAAMkB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMxB,UAAU,CAACI,WAAW,CAAC;AAAA;;AAErD;AAAAoB,GAAA,CAFcD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
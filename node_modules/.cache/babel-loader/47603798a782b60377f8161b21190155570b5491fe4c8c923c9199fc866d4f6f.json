{"ast":null,"code":"const handlePayment = async () => {\n  try {\n    // Step 1: Create the Razorpay Order\n    const order = await createOrder();\n    if (!order) return; // Exit if order creation fails\n\n    const options = {\n      key: 'rzp_test_dTDDElTlJsbQLC',\n      // Replace with your Razorpay Key ID\n      amount: order.amount,\n      currency: order.currency,\n      name: 'Acme Corp',\n      description: 'Test Transaction',\n      image: 'https://example.com/your_logo',\n      order_id: order.id,\n      // Razorpay order ID\n      handler: async response => {\n        alert(`Payment Successful! Payment ID: ${response.razorpay_payment_id}`);\n\n        // Step 2: Send the purchase request with authentication\n        try {\n          const token = localStorage.getItem('token'); // Retrieve token from storage\n          const purchaseResponse = await axios.post('http://localhost:4001/purchase/buy', {\n            bookId: item.id\n          },\n          // Send book ID\n          {\n            headers: {\n              Authorization: `Bearer ${token}`\n            },\n            // Send token in headers\n            withCredentials: true // If your backend uses session cookies\n          });\n          if (purchaseResponse.data.success) {\n            alert('Book added to your purchases!');\n          } else {\n            alert('Failed to add book.');\n          }\n        } catch (purchaseError) {\n          var _purchaseError$respon;\n          console.error('Error purchasing book:', ((_purchaseError$respon = purchaseError.response) === null || _purchaseError$respon === void 0 ? void 0 : _purchaseError$respon.data) || purchaseError.message);\n          alert('Purchase failed. Please try again.');\n        }\n      },\n      prefill: {\n        name: 'Srijan Kumar',\n        email: 'srijan.mishra@example.com',\n        contact: '9000090000'\n      },\n      notes: {\n        address: 'Razorpay Corporate Office'\n      },\n      theme: {\n        color: '#3399cc'\n      }\n    };\n    const rzp1 = new window.Razorpay(options);\n    rzp1.on('payment.failed', response => {\n      alert(`Payment Failed: ${response.error.reason}`);\n    });\n    rzp1.open();\n  } catch (error) {\n    console.error('Error handling payment:', error);\n    alert('Payment process failed. Please try again.');\n  }\n};","map":{"version":3,"names":["handlePayment","order","createOrder","options","key","amount","currency","name","description","image","order_id","id","handler","response","alert","razorpay_payment_id","token","localStorage","getItem","purchaseResponse","axios","post","bookId","item","headers","Authorization","withCredentials","data","success","purchaseError","_purchaseError$respon","console","error","message","prefill","email","contact","notes","address","theme","color","rzp1","window","Razorpay","on","reason","open"],"sources":["C:/Users/Srijan/Desktop/project - test - Copy/Frontend/bookstore/src/Component/Cards.jsx"],"sourcesContent":["const handlePayment = async () => {\r\n  try {\r\n    // Step 1: Create the Razorpay Order\r\n    const order = await createOrder();\r\n    if (!order) return; // Exit if order creation fails\r\n\r\n    const options = {\r\n      key: 'rzp_test_dTDDElTlJsbQLC', // Replace with your Razorpay Key ID\r\n      amount: order.amount, \r\n      currency: order.currency,\r\n      name: 'Acme Corp',\r\n      description: 'Test Transaction',\r\n      image: 'https://example.com/your_logo',\r\n      order_id: order.id, // Razorpay order ID\r\n      handler: async (response) => {\r\n        alert(`Payment Successful! Payment ID: ${response.razorpay_payment_id}`);\r\n\r\n        // Step 2: Send the purchase request with authentication\r\n        try {\r\n          const token = localStorage.getItem('token'); // Retrieve token from storage\r\n          const purchaseResponse = await axios.post(\r\n            'http://localhost:4001/purchase/buy',\r\n            { bookId: item.id }, // Send book ID\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` }, // Send token in headers\r\n              withCredentials: true, // If your backend uses session cookies\r\n            }\r\n          );\r\n\r\n          if (purchaseResponse.data.success) {\r\n            alert('Book added to your purchases!');\r\n          } else {\r\n            alert('Failed to add book.');\r\n          }\r\n        } catch (purchaseError) {\r\n          console.error('Error purchasing book:', purchaseError.response?.data || purchaseError.message);\r\n          alert('Purchase failed. Please try again.');\r\n        }\r\n      },\r\n      prefill: {\r\n        name: 'Srijan Kumar',\r\n        email: 'srijan.mishra@example.com',\r\n        contact: '9000090000',\r\n      },\r\n      notes: { address: 'Razorpay Corporate Office' },\r\n      theme: { color: '#3399cc' },\r\n    };\r\n\r\n    const rzp1 = new window.Razorpay(options);\r\n    rzp1.on('payment.failed', (response) => {\r\n      alert(`Payment Failed: ${response.error.reason}`);\r\n    });\r\n\r\n    rzp1.open();\r\n  } catch (error) {\r\n    console.error('Error handling payment:', error);\r\n    alert('Payment process failed. Please try again.');\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACF;IACA,MAAMC,KAAK,GAAG,MAAMC,WAAW,CAAC,CAAC;IACjC,IAAI,CAACD,KAAK,EAAE,OAAO,CAAC;;IAEpB,MAAME,OAAO,GAAG;MACdC,GAAG,EAAE,yBAAyB;MAAE;MAChCC,MAAM,EAAEJ,KAAK,CAACI,MAAM;MACpBC,QAAQ,EAAEL,KAAK,CAACK,QAAQ;MACxBC,IAAI,EAAE,WAAW;MACjBC,WAAW,EAAE,kBAAkB;MAC/BC,KAAK,EAAE,+BAA+B;MACtCC,QAAQ,EAAET,KAAK,CAACU,EAAE;MAAE;MACpBC,OAAO,EAAE,MAAOC,QAAQ,IAAK;QAC3BC,KAAK,CAAC,mCAAmCD,QAAQ,CAACE,mBAAmB,EAAE,CAAC;;QAExE;QACA,IAAI;UACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;UAC7C,MAAMC,gBAAgB,GAAG,MAAMC,KAAK,CAACC,IAAI,CACvC,oCAAoC,EACpC;YAAEC,MAAM,EAAEC,IAAI,CAACZ;UAAG,CAAC;UAAE;UACrB;YACEa,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUT,KAAK;YAAG,CAAC;YAAE;YAC/CU,eAAe,EAAE,IAAI,CAAE;UACzB,CACF,CAAC;UAED,IAAIP,gBAAgB,CAACQ,IAAI,CAACC,OAAO,EAAE;YACjCd,KAAK,CAAC,+BAA+B,CAAC;UACxC,CAAC,MAAM;YACLA,KAAK,CAAC,qBAAqB,CAAC;UAC9B;QACF,CAAC,CAAC,OAAOe,aAAa,EAAE;UAAA,IAAAC,qBAAA;UACtBC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAE,EAAAF,qBAAA,GAAAD,aAAa,CAAChB,QAAQ,cAAAiB,qBAAA,uBAAtBA,qBAAA,CAAwBH,IAAI,KAAIE,aAAa,CAACI,OAAO,CAAC;UAC9FnB,KAAK,CAAC,oCAAoC,CAAC;QAC7C;MACF,CAAC;MACDoB,OAAO,EAAE;QACP3B,IAAI,EAAE,cAAc;QACpB4B,KAAK,EAAE,2BAA2B;QAClCC,OAAO,EAAE;MACX,CAAC;MACDC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAA4B,CAAC;MAC/CC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAU;IAC5B,CAAC;IAED,MAAMC,IAAI,GAAG,IAAIC,MAAM,CAACC,QAAQ,CAACxC,OAAO,CAAC;IACzCsC,IAAI,CAACG,EAAE,CAAC,gBAAgB,EAAG/B,QAAQ,IAAK;MACtCC,KAAK,CAAC,mBAAmBD,QAAQ,CAACmB,KAAK,CAACa,MAAM,EAAE,CAAC;IACnD,CAAC,CAAC;IAEFJ,IAAI,CAACK,IAAI,CAAC,CAAC;EACb,CAAC,CAAC,OAAOd,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/ClB,KAAK,CAAC,2CAA2C,CAAC;EACpD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
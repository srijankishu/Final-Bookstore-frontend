{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Srijan\\\\Desktop\\\\project\\\\Frontend\\\\bookstore\\\\src\\\\Component\\\\Srijan.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { pdfjs } from 'react-pdf';\nimport Pdfcomp from \"./Pdfcomp\";\nimport { Link, useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = new URL('pdfjs-dist/build/pdf.worker.min.mjs', import.meta.url).toString();\nconst Srijan = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [allImage, setAllImage] = useState([]);\n  const [pdfFile, setPDFFile] = useState(null);\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  useEffect(() => {\n    getPdf();\n  }, []);\n  const getPdf = async () => {\n    try {\n      const result = await axios.get(\"http://localhost:4001/get-files\");\n      setAllImage(result.data.data);\n    } catch (error) {\n      console.error(\"Error fetching PDFs:\", error.response ? error.response.data : error.message);\n    }\n  };\n  const submitImage = async e => {\n    e.preventDefault();\n    if (!title.trim()) {\n      alert('Title is required');\n      return;\n    }\n    if (!file) {\n      alert('Please upload a PDF file');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('file', file);\n    try {\n      const result = await axios.post(\"http://localhost:4001/upload-files\", formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(result);\n      getPdf();\n    } catch (error) {\n      console.error(\"Error uploading file:\", error.response ? error.response.data : error.message);\n    }\n  };\n  const showPdf = pdf => {\n    const pdfUrl = `http://localhost:4001/files/${pdf}`;\n    // Navigate to the Test component and pass the pdfUrl as state\n    navigate('/test', {\n      state: {\n        pdfFile: pdfUrl\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col m-5 justify-center onsub\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"flex flex-col items-center gap-3 border border-black p-5 rounded mx-auto\",\n        onSubmit: submitImage,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-lg font-bold\",\n          children: \"Upload PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"border border-black p-2 rounded outline-none w-full\",\n          placeholder: \"Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control w-full\",\n          accept: \"application/pdf\",\n          onChange: e => setFile(e.target.files[0]),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col m-5 mx-auto items-center upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Upload Here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row gap-x-6 justify-center\",\n          children: allImage.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No PDFs available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this) : allImage.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\"Title: \", data.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: () => showPdf(data.pdf),\n              children: \"View PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)]\n          }, data.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pdfcomp, {\n          pdfFile: pdfFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Srijan, \"wF9a2ao/lf0thxo3CwxeoJkjBZc=\", false, function () {\n  return [useNavigate];\n});\n_c = Srijan;\nexport default Srijan;\nvar _c;\n$RefreshReg$(_c, \"Srijan\");","map":{"version":3,"names":["React","useEffect","useState","axios","pdfjs","Pdfcomp","Link","useNavigate","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","URL","import","meta","url","toString","Srijan","_s","title","setTitle","file","setFile","allImage","setAllImage","pdfFile","setPDFFile","navigate","getPdf","result","get","data","error","console","response","message","submitImage","e","preventDefault","trim","alert","formData","FormData","append","post","headers","log","showPdf","pdf","pdfUrl","state","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","accept","files","length","map","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/Srijan/Desktop/project/Frontend/bookstore/src/Component/Srijan.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { pdfjs } from 'react-pdf';\r\nimport Pdfcomp from \"./Pdfcomp\";\r\nimport { Link, useNavigate } from 'react-router-dom'; // Import useNavigate\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = new URL(\r\n  'pdfjs-dist/build/pdf.worker.min.mjs',\r\n  import.meta.url,\r\n).toString();\r\n\r\nconst Srijan = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [file, setFile] = useState(null);  \r\n  const [allImage, setAllImage] = useState([]);\r\n  const [pdfFile, setPDFFile] = useState(null); \r\n\r\n  const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n  useEffect(() => {\r\n    getPdf();\r\n  }, []);\r\n\r\n  const getPdf = async () => {\r\n    try {\r\n      const result = await axios.get(\"http://localhost:4001/get-files\");\r\n      setAllImage(result.data.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching PDFs:\", error.response ? error.response.data : error.message);\r\n    }\r\n  };\r\n\r\n  const submitImage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!title.trim()) {\r\n      alert('Title is required');\r\n      return;\r\n    }\r\n\r\n    if (!file) {\r\n      alert('Please upload a PDF file');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const result = await axios.post(\"http://localhost:4001/upload-files\", formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      console.log(result);\r\n      getPdf();  \r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error.response ? error.response.data : error.message);\r\n    }\r\n  };\r\n\r\n  const showPdf = (pdf) => {\r\n    const pdfUrl = `http://localhost:4001/files/${pdf}`;\r\n    // Navigate to the Test component and pass the pdfUrl as state\r\n    navigate('/test', { state: { pdfFile: pdfUrl } });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='flex flex-col m-5 justify-center onsub'>\r\n        <form className=\"flex flex-col items-center gap-3 border border-black p-5 rounded mx-auto\" onSubmit={submitImage}>\r\n          <h1 className=\"text-lg font-bold\">Upload PDF</h1>\r\n          \r\n          <input\r\n            type=\"text\"\r\n            className='border border-black p-2 rounded outline-none w-full'\r\n            placeholder='Title'\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            required\r\n          />\r\n          \r\n          <input\r\n            type=\"file\"\r\n            className='form-control w-full'\r\n            accept='application/pdf'\r\n            onChange={(e) => setFile(e.target.files[0])}\r\n            required\r\n          />\r\n          \r\n          <button type=\"submit\" className='btn btn-primary'>\r\n            Submit\r\n          </button>\r\n        </form>\r\n\r\n        <div className='flex flex-col m-5 mx-auto items-center upload'>\r\n          <h1>Upload Here!</h1>\r\n          <div className='flex flex-row gap-x-6 justify-center'>\r\n            {allImage.length === 0 ? (\r\n              <p>No PDFs available</p>\r\n            ) : (\r\n              allImage.map((data) => (\r\n                <div className=\"inner\" key={data.id}>\r\n                  <h6>Title: {data.title}</h6>\r\n                  <button type=\"button\" className='btn btn-primary' onClick={() => showPdf(data.pdf)}>\r\n                    View PDF\r\n                  </button> \r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n          \r\n          <Pdfcomp pdfFile={pdfFile}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Srijan;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,WAAW;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtDL,KAAK,CAACM,mBAAmB,CAACC,SAAS,GAAG,IAAIC,GAAG,CAC3C,qCAAqC,EACrCC,MAAM,CAACC,IAAI,CAACC,GACd,CAAC,CAACC,QAAQ,CAAC,CAAC;AAEZ,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMyB,QAAQ,GAAGpB,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhCN,SAAS,CAAC,MAAM;IACd2B,MAAM,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMC,MAAM,GAAG,MAAM1B,KAAK,CAAC2B,GAAG,CAAC,iCAAiC,CAAC;MACjEN,WAAW,CAACK,MAAM,CAACE,IAAI,CAACA,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACE,QAAQ,GAAGF,KAAK,CAACE,QAAQ,CAACH,IAAI,GAAGC,KAAK,CAACG,OAAO,CAAC;IAC7F;EACF,CAAC;EAED,MAAMC,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACnB,KAAK,CAACoB,IAAI,CAAC,CAAC,EAAE;MACjBC,KAAK,CAAC,mBAAmB,CAAC;MAC1B;IACF;IAEA,IAAI,CAACnB,IAAI,EAAE;MACTmB,KAAK,CAAC,0BAA0B,CAAC;MACjC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAExB,KAAK,CAAC;IAC/BsB,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEtB,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMQ,MAAM,GAAG,MAAM1B,KAAK,CAACyC,IAAI,CAAC,oCAAoC,EAAEH,QAAQ,EAAE;QAC9EI,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFZ,OAAO,CAACa,GAAG,CAACjB,MAAM,CAAC;MACnBD,MAAM,CAAC,CAAC;IACV,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACE,QAAQ,GAAGF,KAAK,CAACE,QAAQ,CAACH,IAAI,GAAGC,KAAK,CAACG,OAAO,CAAC;IAC9F;EACF,CAAC;EAED,MAAMY,OAAO,GAAIC,GAAG,IAAK;IACvB,MAAMC,MAAM,GAAG,+BAA+BD,GAAG,EAAE;IACnD;IACArB,QAAQ,CAAC,OAAO,EAAE;MAAEuB,KAAK,EAAE;QAAEzB,OAAO,EAAEwB;MAAO;IAAE,CAAC,CAAC;EACnD,CAAC;EAED,oBACExC,OAAA;IAAA0C,QAAA,eACE1C,OAAA;MAAK2C,SAAS,EAAC,wCAAwC;MAAAD,QAAA,gBACrD1C,OAAA;QAAM2C,SAAS,EAAC,0EAA0E;QAACC,QAAQ,EAAEjB,WAAY;QAAAe,QAAA,gBAC/G1C,OAAA;UAAI2C,SAAS,EAAC,mBAAmB;UAAAD,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAEjDhD,OAAA;UACEiD,IAAI,EAAC,MAAM;UACXN,SAAS,EAAC,qDAAqD;UAC/DO,WAAW,EAAC,OAAO;UACnBC,KAAK,EAAEzC,KAAM;UACb0C,QAAQ,EAAGxB,CAAC,IAAKjB,QAAQ,CAACiB,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;UAC1CG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eAEFhD,OAAA;UACEiD,IAAI,EAAC,MAAM;UACXN,SAAS,EAAC,qBAAqB;UAC/BY,MAAM,EAAC,iBAAiB;UACxBH,QAAQ,EAAGxB,CAAC,IAAKf,OAAO,CAACe,CAAC,CAACyB,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC,CAAE;UAC5CF,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eAEFhD,OAAA;UAAQiD,IAAI,EAAC,QAAQ;UAACN,SAAS,EAAC,iBAAiB;UAAAD,QAAA,EAAC;QAElD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEPhD,OAAA;QAAK2C,SAAS,EAAC,+CAA+C;QAAAD,QAAA,gBAC5D1C,OAAA;UAAA0C,QAAA,EAAI;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBhD,OAAA;UAAK2C,SAAS,EAAC,sCAAsC;UAAAD,QAAA,EAClD5B,QAAQ,CAAC2C,MAAM,KAAK,CAAC,gBACpBzD,OAAA;YAAA0C,QAAA,EAAG;UAAiB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,GAExBlC,QAAQ,CAAC4C,GAAG,CAAEpC,IAAI,iBAChBtB,OAAA;YAAK2C,SAAS,EAAC,OAAO;YAAAD,QAAA,gBACpB1C,OAAA;cAAA0C,QAAA,GAAI,SAAO,EAACpB,IAAI,CAACZ,KAAK;YAAA;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC5BhD,OAAA;cAAQiD,IAAI,EAAC,QAAQ;cAACN,SAAS,EAAC,iBAAiB;cAACgB,OAAO,EAAEA,CAAA,KAAMrB,OAAO,CAAChB,IAAI,CAACiB,GAAG,CAAE;cAAAG,QAAA,EAAC;YAEpF;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,GAJiB1B,IAAI,CAACsC,EAAE;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAK9B,CACN;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAENhD,OAAA,CAACJ,OAAO;UAACoB,OAAO,EAAEA;QAAQ;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvC,EAAA,CA3GID,MAAM;EAAA,QAMOV,WAAW;AAAA;AAAA+D,EAAA,GANxBrD,MAAM;AA6GZ,eAAeA,MAAM;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
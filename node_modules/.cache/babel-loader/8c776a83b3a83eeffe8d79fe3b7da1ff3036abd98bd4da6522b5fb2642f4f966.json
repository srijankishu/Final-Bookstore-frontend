{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Srijan\\\\Desktop\\\\project - test\\\\Frontend\\\\bookstore\\\\src\\\\Component\\\\Cards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { pdfjs } from 'react-pdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = new URL('pdfjs-dist/build/pdf.worker.min.mjs', import.meta.url).toString();\nconst Cards = ({\n  item\n}) => {\n  _s();\n  const [allImage, setAllImage] = useState([]);\n\n  // Fetch PDFs when the component mounts\n  useEffect(() => {\n    const getPdf = async () => {\n      try {\n        const result = await axios.get(\"http://localhost:4001/get-files\");\n        setAllImage(result.data.data);\n      } catch (error) {\n        console.error(\"Error fetching PDFs:\", error.response ? error.response.data : error.message);\n      }\n    };\n    getPdf();\n  }, []); // Empty dependency array to run once on mount\n\n  // Define showPdf function before using it\n  const showPdf = pdfName => {\n    // Define what should happen when the user clicks \"Buy Now\"\n    navigate(`/pdf/${encodeURIComponent(pdf)}`);\n    window.open(`http://localhost:4001/files/${pdfName}`, '_blank'); // Open the PDF in a new tab\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card bg-base-100 w-90 m-2 shadow-xl hover:scale-105 duration-200 bg-white text-black dark:bg-slate-900 dark:text-white dark:border\",\n      children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image,\n          alt: \"Book Cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: [item.name, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"badge badge-secondary\",\n            children: item.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-actions justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cursor-pointer px-7 py-1 rounded-full border-[2px] hover:bg-pink-500 hover:text-white duration-300 badge-outline\",\n            children: [\"$\", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"x\",\n            children: allImage.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No PDFs available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this) : allImage.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cursor-pointer px-2 py-1 rounded-full border-[2px] hover:bg-pink-500 \\r hover:text-white duration-300 badge-outline\",\n                onClick: () => showPdf(data.pdf),\n                children: \"Buy Now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this)\n            }, data.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Cards, \"s0I82k2TL+Uw8yLiAHrG11Gb/YU=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","useEffect","axios","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","URL","import","meta","url","toString","Cards","item","_s","allImage","setAllImage","getPdf","result","get","data","error","console","response","message","showPdf","pdfName","navigate","encodeURIComponent","pdf","window","open","className","children","src","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","category","title","price","length","map","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/Srijan/Desktop/project - test/Frontend/bookstore/src/Component/Cards.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { pdfjs } from 'react-pdf';\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = new URL(\r\n  'pdfjs-dist/build/pdf.worker.min.mjs',\r\n  import.meta.url,\r\n).toString();\r\n\r\nconst Cards = ({ item }) => {\r\n  const [allImage, setAllImage] = useState([]);\r\n\r\n  // Fetch PDFs when the component mounts\r\n  useEffect(() => {\r\n    const getPdf = async () => {\r\n      try {\r\n        const result = await axios.get(\"http://localhost:4001/get-files\");\r\n        setAllImage(result.data.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching PDFs:\", error.response ? error.response.data : error.message);\r\n      }\r\n    };\r\n\r\n    getPdf();\r\n  }, []); // Empty dependency array to run once on mount\r\n\r\n  // Define showPdf function before using it\r\n  const showPdf = (pdfName) => {\r\n    // Define what should happen when the user clicks \"Buy Now\"\r\n    navigate(`/pdf/${encodeURIComponent(pdf)}`); \r\n    window.open(`http://localhost:4001/files/${pdfName}`, '_blank'); // Open the PDF in a new tab\r\n  };\r\n\r\n  return (\r\n    <div className='mt-4'>\r\n      <div className=\"card bg-base-100 w-90 m-2 shadow-xl hover:scale-105 duration-200 bg-white text-black dark:bg-slate-900 dark:text-white dark:border\">\r\n        <figure>\r\n          <img src={item.image} alt=\"Book Cover\" />\r\n        </figure>\r\n        <div className=\"card-body\">\r\n          <h2 className=\"card-title\">\r\n            {item.name}\r\n            <div className=\"badge badge-secondary\">{item.category}</div>\r\n          </h2>\r\n          <p>{item.title}</p>\r\n          <div className=\"card-actions justify-between\">\r\n            <div className=\"cursor-pointer px-7 py-1 rounded-full border-[2px] hover:bg-pink-500 hover:text-white duration-300 badge-outline\">\r\n              ${item.price}\r\n            </div>\r\n            <div className='x'>\r\n              {allImage.length === 0 ? (\r\n                <p>No PDFs available</p>\r\n              ) : (\r\n                allImage.map((data) => (\r\n                  <div className=\"inner\" key={data.id}>\r\n                    <div className=\"cursor-pointer px-2 py-1 rounded-full border-[2px] hover:bg-pink-500 \r\n                      hover:text-white duration-300 badge-outline\"\r\n                      onClick={() => showPdf(data.pdf)}>\r\n                      Buy Now\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElCF,KAAK,CAACG,mBAAmB,CAACC,SAAS,GAAG,IAAIC,GAAG,CAC3C,qCAAqC,EACrCC,MAAM,CAACC,IAAI,CAACC,GACd,CAAC,CAACC,QAAQ,CAAC,CAAC;AAEZ,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMiB,MAAM,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,iCAAiC,CAAC;QACjEH,WAAW,CAACE,MAAM,CAACE,IAAI,CAACA,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACE,QAAQ,GAAGF,KAAK,CAACE,QAAQ,CAACH,IAAI,GAAGC,KAAK,CAACG,OAAO,CAAC;MAC7F;IACF,CAAC;IAEDP,MAAM,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,MAAMQ,OAAO,GAAIC,OAAO,IAAK;IAC3B;IACAC,QAAQ,CAAC,QAAQC,kBAAkB,CAACC,GAAG,CAAC,EAAE,CAAC;IAC3CC,MAAM,CAACC,IAAI,CAAC,+BAA+BL,OAAO,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC;EACnE,CAAC;EAED,oBACEtB,OAAA;IAAK4B,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnB7B,OAAA;MAAK4B,SAAS,EAAC,oIAAoI;MAAAC,QAAA,gBACjJ7B,OAAA;QAAA6B,QAAA,eACE7B,OAAA;UAAK8B,GAAG,EAAErB,IAAI,CAACsB,KAAM;UAACC,GAAG,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACTpC,OAAA;QAAK4B,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxB7B,OAAA;UAAI4B,SAAS,EAAC,YAAY;UAAAC,QAAA,GACvBpB,IAAI,CAAC4B,IAAI,eACVrC,OAAA;YAAK4B,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAEpB,IAAI,CAAC6B;UAAQ;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC,eACLpC,OAAA;UAAA6B,QAAA,EAAIpB,IAAI,CAAC8B;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBpC,OAAA;UAAK4B,SAAS,EAAC,8BAA8B;UAAAC,QAAA,gBAC3C7B,OAAA;YAAK4B,SAAS,EAAC,kHAAkH;YAAAC,QAAA,GAAC,GAC/H,EAACpB,IAAI,CAAC+B,KAAK;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACNpC,OAAA;YAAK4B,SAAS,EAAC,GAAG;YAAAC,QAAA,EACflB,QAAQ,CAAC8B,MAAM,KAAK,CAAC,gBACpBzC,OAAA;cAAA6B,QAAA,EAAG;YAAiB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,GAExBzB,QAAQ,CAAC+B,GAAG,CAAE1B,IAAI,iBAChBhB,OAAA;cAAK4B,SAAS,EAAC,OAAO;cAAAC,QAAA,eACpB7B,OAAA;gBAAK4B,SAAS,EAAC,qHAC+B;gBAC5Ce,OAAO,EAAEA,CAAA,KAAMtB,OAAO,CAACL,IAAI,CAACS,GAAG,CAAE;gBAAAI,QAAA,EAAC;cAEpC;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK;YAAC,GALoBpB,IAAI,CAAC4B,EAAE;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAM9B,CACN;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA5DIF,KAAK;AAAAqC,EAAA,GAALrC,KAAK;AA8DX,eAAeA,KAAK;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
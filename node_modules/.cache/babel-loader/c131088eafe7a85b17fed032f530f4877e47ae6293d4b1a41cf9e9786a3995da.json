{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Srijan\\\\Desktop\\\\project\\\\Frontend\\\\bookstore\\\\src\\\\Component\\\\Srijan.jsx\",\n  _s = $RefreshSig$();\n// UploadBook.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadBook = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [pdf, setPdf] = useState(null);\n  const [message, setMessage] = useState('');\n  const onFileChange = e => {\n    setPdf(e.target.files[0]);\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('pdf', pdf);\n    try {\n      const res = await axios.post('http://localhost:4000/dpdf/upload', formData, {\n        // Corrected port\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(res.data);\n      setMessage('Book uploaded successfully!'); // Success message\n      // Reset form after successful upload\n      setTitle('');\n      setPdf(null);\n    } catch (err) {\n      console.error(err);\n      setMessage('Error uploading book. Please try again.'); // Error message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Book Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"application/pdf\",\n        onChange: onFileChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadBook, \"yTkGdAoCAmNeI8vkNR1bC6GSO48=\");\n_c = UploadBook;\nexport default UploadBook;\nvar _c;\n$RefreshReg$(_c, \"UploadBook\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadBook","_s","title","setTitle","pdf","setPdf","message","setMessage","onFileChange","e","target","files","onSubmit","preventDefault","formData","FormData","append","res","post","headers","console","log","data","err","error","children","type","placeholder","value","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","accept","_c","$RefreshReg$"],"sources":["C:/Users/Srijan/Desktop/project/Frontend/bookstore/src/Component/Srijan.jsx"],"sourcesContent":["// UploadBook.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UploadBook = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [pdf, setPdf] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const onFileChange = (e) => {\r\n    setPdf(e.target.files[0]);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('pdf', pdf);\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:4000/dpdf/upload', formData, { // Corrected port\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      console.log(res.data);\r\n      setMessage('Book uploaded successfully!'); // Success message\r\n      // Reset form after successful upload\r\n      setTitle('');\r\n      setPdf(null);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessage('Error uploading book. Please try again.'); // Error message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Book Title\" \r\n          value={title} \r\n          onChange={(e) => setTitle(e.target.value)} \r\n          required\r\n        />\r\n        <input \r\n          type=\"file\" \r\n          accept=\"application/pdf\" \r\n          onChange={onFileChange} \r\n          required\r\n        />\r\n        <button type=\"submit\">Upload</button>\r\n      </form>\r\n      {message && <p>{message}</p>} {/* Display message */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadBook;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
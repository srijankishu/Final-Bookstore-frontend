{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Srijan\\\\Desktop\\\\project - test\\\\Frontend\\\\bookstore\\\\src\\\\Component\\\\Cards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { pdfjs } from 'react-pdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = new URL('pdfjs-dist/build/pdf.worker.min.mjs', import.meta.url).toString();\nconst Cards = ({\n  item\n}) => {\n  _s();\n  const [pdfName, setPdfName] = useState(null); // Store the assigned PDF for this card\n  const navigate = useNavigate();\n  useEffect(() => {\n    const getPdfForItem = async () => {\n      try {\n        const result = await axios.get(`http://localhost:4001/get-file/${item.id}`); // Fetch the specific PDF for this item\n        setPdfName(result.data.pdf); // Assuming the response includes the PDF file name in 'data.pdf'\n      } catch (error) {\n        console.error(\"Error fetching PDF for the item:\", error.response ? error.response.data : error.message);\n      }\n    };\n    getPdfForItem(); // Fetch the PDF assigned to this item when the component mounts\n  }, [item.id]); // The effect will run whenever 'item.id' changes\n\n  const showPdf = () => {\n    if (pdfName) {\n      navigate(`/pdf/${encodeURIComponent(pdfName)}`); // Navigate to the PDF view page\n    } else {\n      console.error(\"No PDF available for this item.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card bg-base-100 w-90 m-2 shadow-xl hover:scale-105 duration-200 bg-white text-black dark:bg-slate-900 dark:text-white dark:border\",\n      children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image,\n          alt: \"Book Cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: [item.name, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"badge badge-secondary\",\n            children: item.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-actions justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cursor-pointer px-7 py-1 rounded-full border-[2px] hover:bg-pink-500 hover:text-white duration-300 badge-outline\",\n            children: [\"$\", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: pdfName ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cursor-pointer px-2 py-1 rounded-full border-[2px] hover:bg-pink-500 \\r hover:text-white duration-300 badge-outline\",\n              onClick: showPdf,\n              children: \"Buy Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No PDF available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Cards, \"A2TroDSByiQeWoFkBi078hoIacE=\", false, function () {\n  return [useNavigate];\n});\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","URL","import","meta","url","toString","Cards","item","_s","pdfName","setPdfName","navigate","getPdfForItem","result","get","id","data","pdf","error","console","response","message","showPdf","encodeURIComponent","className","children","src","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","category","title","price","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Srijan/Desktop/project - test/Frontend/bookstore/src/Component/Cards.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { pdfjs } from 'react-pdf';\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = new URL(\r\n  'pdfjs-dist/build/pdf.worker.min.mjs',\r\n  import.meta.url,\r\n).toString();\r\n\r\nconst Cards = ({ item }) => {\r\n  const [pdfName, setPdfName] = useState(null); // Store the assigned PDF for this card\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const getPdfForItem = async () => {\r\n      try {\r\n        const result = await axios.get(`http://localhost:4001/get-file/${item.id}`); // Fetch the specific PDF for this item\r\n        setPdfName(result.data.pdf); // Assuming the response includes the PDF file name in 'data.pdf'\r\n      } catch (error) {\r\n        console.error(\"Error fetching PDF for the item:\", error.response ? error.response.data : error.message);\r\n      }\r\n    };\r\n\r\n    getPdfForItem(); // Fetch the PDF assigned to this item when the component mounts\r\n  }, [item.id]); // The effect will run whenever 'item.id' changes\r\n\r\n  const showPdf = () => {\r\n    if (pdfName) {\r\n      navigate(`/pdf/${encodeURIComponent(pdfName)}`); // Navigate to the PDF view page\r\n    } else {\r\n      console.error(\"No PDF available for this item.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='mt-4'>\r\n      <div className=\"card bg-base-100 w-90 m-2 shadow-xl hover:scale-105 duration-200 bg-white text-black dark:bg-slate-900 dark:text-white dark:border\">\r\n        <figure>\r\n          <img src={item.image} alt=\"Book Cover\" />\r\n        </figure>\r\n        <div className=\"card-body\">\r\n          <h2 className=\"card-title\">\r\n            {item.name}\r\n            <div className=\"badge badge-secondary\">{item.category}</div>\r\n          </h2>\r\n          <p>{item.title}</p>\r\n          <div className=\"card-actions justify-between\">\r\n            <div className=\"cursor-pointer px-7 py-1 rounded-full border-[2px] hover:bg-pink-500 hover:text-white duration-300 badge-outline\">\r\n              ${item.price}\r\n            </div>\r\n            <div>\r\n              {pdfName ? (\r\n                <div \r\n                  className=\"cursor-pointer px-2 py-1 rounded-full border-[2px] hover:bg-pink-500 \r\n                  hover:text-white duration-300 badge-outline\"\r\n                  onClick={showPdf}>\r\n                  Buy Now\r\n                </div>\r\n              ) : (\r\n                <p>No PDF available</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
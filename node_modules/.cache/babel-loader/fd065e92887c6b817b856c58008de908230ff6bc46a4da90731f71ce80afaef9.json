{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Srijan\\\\Desktop\\\\project - test - Copy\\\\Frontend\\\\bookstore\\\\src\\\\Context\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jwtDecode } from 'jwt-decode'; // Ensure you're using the correct library for decoding\nimport Login from '../Component/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    // If no token, set the state to show Login\n    if (!token) {\n      setIsAuthenticated(false);\n      return;\n    }\n    try {\n      // Decode the token and check its validity (e.g., expiration)\n      const decodedToken = jwtDecode(token);\n      const currentTime = Date.now() / 1000; // Get current time in seconds\n\n      // Check if the token has expired\n      if (decodedToken.exp < currentTime) {\n        localStorage.removeItem('token');\n        setIsAuthenticated(false);\n      } else {\n        setIsAuthenticated(true);\n      }\n    } catch (err) {\n      console.error('Invalid token', err);\n      localStorage.removeItem('token');\n      setIsAuthenticated(false);\n    }\n  }, []);\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","jwtDecode","Login","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","decodedToken","currentTime","Date","now","exp","removeItem","err","console","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Srijan/Desktop/project - test - Copy/Frontend/bookstore/src/Context/ProtectedRoute.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { jwtDecode } from 'jwt-decode'; // Ensure you're using the correct library for decoding\r\nimport Login from '../Component/Login';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    // If no token, set the state to show Login\r\n    if (!token) {\r\n      setIsAuthenticated(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Decode the token and check its validity (e.g., expiration)\r\n      const decodedToken = jwtDecode(token);\r\n      const currentTime = Date.now() / 1000; // Get current time in seconds\r\n\r\n      // Check if the token has expired\r\n      if (decodedToken.exp < currentTime) {\r\n        localStorage.removeItem('token');\r\n        setIsAuthenticated(false);\r\n      } else {\r\n        setIsAuthenticated(true);\r\n      }\r\n    } catch (err) {\r\n      console.error('Invalid token', err);\r\n      localStorage.removeItem('token');\r\n      setIsAuthenticated(false);\r\n    }\r\n  }, []);\r\n\r\n  if (!isAuthenticated) {\r\n    return <Login />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,YAAY,CAAC,CAAC;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7DD,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;IAE3C;IACA,IAAI,CAACF,KAAK,EAAE;MACVD,kBAAkB,CAAC,KAAK,CAAC;MACzB;IACF;IAEA,IAAI;MACF;MACA,MAAMI,YAAY,GAAGZ,SAAS,CAACS,KAAK,CAAC;MACrC,MAAMI,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;;MAEvC;MACA,IAAIH,YAAY,CAACI,GAAG,GAAGH,WAAW,EAAE;QAClCH,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;QAChCT,kBAAkB,CAAC,KAAK,CAAC;MAC3B,CAAC,MAAM;QACLA,kBAAkB,CAAC,IAAI,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,GAAG,CAAC;MACnCR,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;MAChCT,kBAAkB,CAAC,KAAK,CAAC;IAC3B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACD,eAAe,EAAE;IACpB,oBAAOJ,OAAA,CAACF,KAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAClB;EAEA,OAAOnB,QAAQ;AACjB,CAAC;AAACC,EAAA,CApCIF,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AAsCpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}